# Sets the number of worker processes. 'auto' is a good default for modern systems.
worker_processes auto;

# Defines the user that the worker processes will run as.
# This should match the user created in the Dockerfile for security.
user appuser;

events {
    # The maximum number of simultaneous connections that can be opened by a worker process.
    worker_connections 1024;
}

http {
    # Include the file defining MIME types
    include       /etc/nginx/mime.types;
    # Default MIME type for files
    default_type  application/octet-stream;

    # Define a custom log format for better logging (optional but recommended)
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # Set the paths for access and error logs
    # Note: NGINX needs write permissions to these files.
    # By default, we log to stdout/stderr to be Docker-friendly.
    access_log /dev/stdout main;
    error_log  /dev/stderr warn;

    # Optimizations
    sendfile            on; # Enables direct copying of data from one file descriptor to another
    tcp_nopush          on; # Sends HTTP response headers in one packet
    keepalive_timeout   65; # Timeout for keep-alive connections
    server_tokens       off; # Hides the NGINX version number for security

    # Gzip compression settings to reduce the size of transferred data
    gzip                on;
    gzip_disable        "msie6"; # Disable for old IE versions
    gzip_vary           on;
    gzip_proxied        any;
    gzip_comp_level     6; # Compression level (1-9)
    gzip_buffers        16 8k;
    gzip_min_length     1024; # Don't compress files smaller than 1KB
    gzip_types
        text/plain
        text/css
        application/json
        application/javascript
        application/x-javascript
        text/xml
        application/xml
        application/xml+rss
        text/javascript
        image/svg+xml
        font/woff2;

    server {
        listen      80;
        server_name localhost;

        root /usr/share/nginx/html;
        index index.html;

        # This is the key part for single-page applications (SPAs) like React.
        # It tries to find a file matching the URI, then a directory.
        # If neither exists, it falls back to serving /index.html.
        # This allows client-side routing to work correctly.
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Cache control for static assets.
        # Tells browsers to cache these files for 30 days.
        location ~* \.(?:css|js|ico|png|jpg|jpeg|gif|svg|woff|woff2|ttf|eot|otf)$ {
            expires     30d;
            add_header  Cache-Control "public";
            access_log  off; # Don't log access for static files
        }

        # Error pages (optional)
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
}
